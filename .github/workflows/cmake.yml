name: CMake Compilation

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  setup:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        gcc: [10, 11]
        llvm: [12, 13]
        os: [ubuntu-18.04, ubuntu-20.04]
        build_type: ["Debug", "Release"]
      # DEBUG
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

    steps:
      - uses: actions/checkout@v2
        env:
          CC: gcc-${{ matrix.gcc }}
          CXX: g++-${{ matrix.gcc }}
          BUILD_TYPE: ${{ matrix.build_type }}

      - name: Install LLVM from ATP
        run: |
          sudo apt update
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{ matrix.llvm }}
      - name: Install all Clang dependencies
        run: |
          sudo apt update && sudo apt install clang-tools-${{ matrix.llvm }} libclang-${{ matrix.llvm }}-dev

  build:
    needs: setup
    runs-on: ${{ matrix.os }}
    steps:
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build MACVETH
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    steps:
      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more
        # detail
        if: ${{ env.BUILD_TYPE == "Debug" }}
        run: ctest -C ${{env.BUILD_TYPE}}
