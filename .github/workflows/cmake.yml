name: CMake Compilation and Test

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #gcc: [10, 11]
        gcc: [10]
        #llvm: ["11.0.0", "12.0.0"]
        llvm: ["11.0.0"]
        os: [ubuntu-18.04]

    steps:
      - uses: actions/checkout@v2
        env:
          CC: gcc-${{ matrix.gcc }}
          CXX: g++-${{ matrix.gcc }}
          BUILD_TYPE: Release

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1.4.1
        with:
          version: ${{ matrix.llvm }}

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build MACVETH
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        env:
          LIBRARY_PATH: "${{ env.LLVM_PATH }}/lib"

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}
